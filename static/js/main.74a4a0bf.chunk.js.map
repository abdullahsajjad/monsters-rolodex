{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","map","Searchbox","placeholder","handleChange","type","onChange","App","e","setState","SearchField","target","value","state","fetch","then","response","json","users","this","filterMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAACC,GACjB,OAAO,sBAAKC,UAAU,iBAAf,UACH,qBAAKC,IAAI,UAASC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACrB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCHbC,EAAW,SAACR,GACrB,OAAO,qBAAKC,UAAU,YAAf,SAEHD,EAAMI,QAAQK,KAAK,SAAAL,GAAO,OAC1B,cAAC,EAAD,CAAMA,QAASA,UCLVM,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACrC,OAAO,uBACHX,UAAY,SACZY,KAAK,SACLF,YAAaA,EACbG,SAAaF,MCoCNG,E,kDAtCb,aAAgB,IAAD,8BACb,gBAeFH,aAAe,SAACI,GACd,EAAKC,SAAU,CAAEC,YAAaF,EAAEG,OAAOC,SAdvC,EAAKC,MAAQ,CACXjB,QAAS,GACTc,YAAa,IALF,E,qDAUf,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAK,SAAAG,GAAK,OAAG,EAAKT,SAAU,CAACb,QAASsB,S,oBAOzC,WAAW,IAAD,EACyBC,KAAKN,MAA9BjB,EADA,EACAA,QAASc,EADT,EACSA,YACXU,EAAiBxB,EAAQyB,QAAQ,SAAAzB,GAAO,OAC1CA,EAAQE,KAAKwB,cAAcC,SAASb,EAAYY,kBAEpD,OACE,sBAAK7B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACQU,YAAc,kBACdC,aAAiBe,KAAKf,eAE9B,cAAC,EAAD,CAAUR,QAASwB,W,GAjCTI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.74a4a0bf.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.style.css';\r\n\r\nexport const Card = (props) => {\r\n    return <div className=\"card-container\">\r\n        <img alt=\"monster\"src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h1>{props.monster.name}</h1>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n}","import React from 'react';\r\nimport './card-list.style.css';\r\nimport { Card } from '../card/card.component';\r\n\r\nexport const CardList = (props) => {\r\n    return <div className=\"card-list\">\r\n        {\r\n        props.monster.map( monster => (\r\n        <Card monster={monster}/>\r\n      ) )}</div>;\r\n}","import React from 'react';\r\nimport './search-box.style.css';\r\n\r\nexport const Searchbox = ({ placeholder, handleChange }) => {\r\n    return <input \r\n        className = 'search'\r\n        type=\"search\" \r\n        placeholder={placeholder} \r\n        onChange = { handleChange }/>\r\n}","import './App.css';\nimport { Component } from 'react';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { Searchbox } from './components/search-box/search-box.component';\nclass App extends Component {\n  constructor () {\n    super();\n\n    this.state = {\n      monster: [],\n      SearchField: '',\n    };\n\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then( response => response.json() )\n    .then(users=> this.setState( {monster: users} ))\n  }\n\n  handleChange = (e) => {\n    this.setState( { SearchField: e.target.value}) \n  }\n\n  render () {\n    const { monster, SearchField } = this.state;\n    const filterMonsters = monster.filter( monster =>\n        monster.name.toLowerCase().includes(SearchField.toLowerCase())\n      );\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <Searchbox\n                placeholder = \"Search Monsters\"\n                handleChange = { this.handleChange }\n        />\n        <CardList monster={filterMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}